{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst useFetchBlogData = url => {\n  _s();\n  const [blogData, setBlogData] = useState({});\n  useEffect(() => {\n    const fetchBlogData = async () => {\n      try {\n        const result = await axios.get(`http://localhost:3004/api/blog/${blogId}`);\n        if (result.status === 200) {\n          console.log(result.data);\n          setBlogData(result.data);\n        }\n      } catch (err) {\n        if (err.response) {\n          alert(`Server Error : ${err.response.data}`);\n        } else {\n          alert(`Network Error : ${err.message}`);\n        }\n        navigate(\"/\");\n      }\n    };\n    fetchBlogData();\n  }, [blogId, navigate]);\n  return blogData;\n};\n_s(useFetchBlogData, \"KzGdrTwvL7XxOy/MPYXhr1OrsjI=\");\nexport default useFetchBlogData;","map":{"version":3,"names":["useEffect","useState","axios","useFetchBlogData","url","_s","blogData","setBlogData","fetchBlogData","result","get","blogId","status","console","log","data","err","response","alert","message","navigate"],"sources":["/home/laiba/CODE/NodeJS/blog-app/frontend/src/data/fetchBlogData.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nconst useFetchBlogData = (url)=>{\n    const [blogData,setBlogData] = useState({});\n    useEffect(()=>{\n        const fetchBlogData = async()=>{\n            try{\n                const result = await axios.get(`http://localhost:3004/api/blog/${blogId}`)\n                if(result.status === 200){\n                    console.log(result.data)\n                    setBlogData(result.data)\n                }\n            }catch(err){\n                if(err.response){\n                    alert(`Server Error : ${err.response.data}`)\n                }\n                else{\n                    alert(`Network Error : ${err.message}`)\n                }\n                navigate(\"/\")\n            }\n        }\n        fetchBlogData();\n    },[blogId,navigate])\n    return blogData\n}\nexport default useFetchBlogData"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,gBAAgB,GAAIC,GAAG,IAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3CD,SAAS,CAAC,MAAI;IACV,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAS;MAC3B,IAAG;QACC,MAAMC,MAAM,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,kCAAkCC,MAAM,EAAE,CAAC;QAC1E,IAAGF,MAAM,CAACG,MAAM,KAAK,GAAG,EAAC;UACrBC,OAAO,CAACC,GAAG,CAACL,MAAM,CAACM,IAAI,CAAC;UACxBR,WAAW,CAACE,MAAM,CAACM,IAAI,CAAC;QAC5B;MACJ,CAAC,QAAMC,GAAG,EAAC;QACP,IAAGA,GAAG,CAACC,QAAQ,EAAC;UACZC,KAAK,CAAC,kBAAkBF,GAAG,CAACC,QAAQ,CAACF,IAAI,EAAE,CAAC;QAChD,CAAC,MACG;UACAG,KAAK,CAAC,mBAAmBF,GAAG,CAACG,OAAO,EAAE,CAAC;QAC3C;QACAC,QAAQ,CAAC,GAAG,CAAC;MACjB;IACJ,CAAC;IACDZ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAC,CAACG,MAAM,EAACS,QAAQ,CAAC,CAAC;EACpB,OAAOd,QAAQ;AACnB,CAAC;AAAAD,EAAA,CAvBKF,gBAAgB;AAwBtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}